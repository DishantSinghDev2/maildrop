# Maildrop Lambda API

service:
  name: maildrop-api

plugins:
  - serverless-terraform-outputs

custom:
  terraformOutputs:
    cwd: ../infrastructure

provider:
  name: aws
  runtime: nodejs10.x
  stage: ${opt:stage, 'dev'}
  region: 'us-west-2'
  memorySize: 256
  timeout: 10
  logRetentionInDays: 7
  apiKeys:
    - maildrop-${opt:stage, 'dev'}
  usagePlan:
    throttle:
      burstLimit: 20
      rateLimit: 10
  environment:
    REDIS: "${terraform:default:redis.value}"
    RATELIMIT: "20"
    ALTINBOX_MOD: ${env:TF_VAR_altinbox_mod, '1029384756'}
  vpc:
    securityGroupIds:
      - ${terraform:default:lambda_security_group.value}
    subnetIds:
      - ${terraform:default:lambda_subnet.value}

package:
  include:
    - dist/**
    - '!dist/**/*.test.js'
  exclude:
    - src/**
    - node_modules/aws-sdk/**
    - README.md
    - tsconfig.json
    - tslint.json
    - .nyc_output/**
    - .gitlab-ci.yml
    - .idea/**
    - .vscode/**

functions:
  mailbox:
    handler: dist/mailbox.listHandler
    events:
      - http:
          path: mailbox/{name}
          method: get
          private: true
          cors: true
          request:
            parameters:
              paths:
                name: true
  message:
    handler: dist/mailbox.messageHandler
    events:
      - http:
          path: mailbox/{name}/{id}
          method: get
          private: true
          cors: true
          request:
            parameters:
              paths:
                - name: true
                - id: true
  delete:
    handler: dist/mailbox.deleteHandler
    events:
      - http:
          path: mailbox/{name}/{id}
          method: delete
          private: true
          cors: true
          request:
            parameters:
              paths:
                - name: true
                - id: true
  statistics:
    handler: dist/statistics.statsHandler
    events:
      - http:
          path: statistics
          method: get
          private: true
          cors: true
